# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'linecut.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from GUI_Test import *
class Ui_Form(QtWidgets.QMainWindow,Ui_MainWindow):
    def __init__(self,topo):
        super(Ui_Form, self).__init__()
        self.setObjectName("Form")
        self.resize(653, 749)
        self.topo = topo
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        self.verticalLayout = QtWidgets.QVBoxLayout(self)
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter = QtWidgets.QSplitter(self)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.widget = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setObjectName("widget")
        self.width = 8
        self.height = 8
        self.dpi = 100
        self.counts = 0
        self.count_bin = 0
        self.color_count = 0
        self.fft_count = 1
        self.figure = Figure(figsize=(self.width, self.height), dpi=self.dpi)
        self.canvas = FigureCanvas(self.figure)
        self.ax = self.figure.add_subplot(111)
        self.ax.pcolormesh(self.topo)
        self.canvas.draw()
        # self.retranslateUi(self)

        self.verticalLayout.addWidget(self.canvas)
        self.horizontalScrollBar = QtWidgets.QScrollBar(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalScrollBar.sizePolicy().hasHeightForWidth())
        self.horizontalScrollBar.setSizePolicy(sizePolicy)
        self.horizontalScrollBar.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalScrollBar.setObjectName("horizontalScrollBar")
        self.verticalLayout.addWidget(self.splitter)
        self.cmaplist = ['YlOrBr','YlOrBr_r','Blues','Blues_r','binary_r','binary',
                         'autumn','autumn_r','YlOrRd','YlOrRd_r','Reds','Reds',
                         'Purples','Purples_r','copper','copper_r','OrRd','OrRd_r','RdBu',
                         'RdBu_r','coolwarm','coolwarm_r']
        self.shortcut = QShortcut(QKeySequence('F3'),self.widget,self.changecolor)
        self.shortcut_1 = QShortcut(QKeySequence('Ctrl+Q'),self.widget,self.dialog_open)
        self.shortcut_2 = QShortcut(QKeySequence('Ctrl+S'),self.widget,self.savepng)
        self.shortcut_3 = QShortcut(QKeySequence('Ctrl+B'),self.widget,self.savedata_bin)
        self.shortcut_4 = QShortcut(QKeySequence('F11'),self.widget,self.contrast_ratio)
        self.setCentralWidget(self.widget)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)
    def dialog_open(self):
        """
        items = ('raw','subtract best-fit line from horizontal lines','subtract best-fit line from horizontal lines','Nomalize to the range [0,1]',
                 'suppress bad pixels','subtract linear fit','subtract plane fit')
        item,ok =  QInputDialog.getItem(self.centralwidget,'scan correction','fit list',items,0,False)
        if ok and item:
            if item == 'raw':
                self.topo = self.topo
                print("形貌图保持不变")
            elif item == 'subtract plane fit':
                self.topo = fieldops.subtractMeanPlane(self.topo)
                print("形貌图planefit")
            elif item ==  'suppress bad pixels':
                self.topo = fieldops.detectNaN(self.topo)

        """
        self.topo = dialog_function(self.widget,self.topo)
        self.topomap_draw()


    def retranslateUi(self, Ui_Form):
        _translate = QtCore.QCoreApplication.translate
        Ui_Form.setWindowTitle(_translate("Form", "Cut_Figure"))


